name: Continuous Deployment
env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on: push

jobs:
    preview-deploy:
        runs-on: ubuntu-latest
        environment:
            name: preview
            url: ${{ steps.deploy.outputs.url }}
        outputs:
            url: ${{ steps.deploy.outputs.url }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: yarn
            - name: Install Vercel CLI
              run: yarn global add vercel@latest
            - name: Deploy project to Vercel
              id: deploy
              run: |
                  vercel --token=${{ secrets.VERCEL_TOKEN }} > preview-url
                  echo "url=$(cat preview-url)" >> $GITHUB_OUTPUT

    end-2-end-test:
        needs: [preview-deploy]
        timeout-minutes: 60
        runs-on: ubuntu-latest
        env:
            DEPLOYMENT_URL: ${{ needs.preview-deploy.outputs.url }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: yarn
            - name: Get installed Playwright version
              id: playwright-version
              run: echo "PLAYWRIGHT_VERSION=$(jq -r .devDependencies.\"@playwright/test\" package.json)" >> $GITHUB_ENV
            - name: Cache Playwright binaries
              uses: actions/cache@v3
              id: playwright-cache
              with:
                  path: |
                      ~/.cache/ms-playwright
                  key: $RUNNER_OS-playwright-$PLAYWRIGHT_VERSION
            - name: Install dependencies
              run: yarn
            - name: Install Playwright browsers
              run: yarn playwright install --with-deps
              if: steps.playwright-cache.outputs.cache-hit != 'true'
            - name: Run Playwright tests
              run: yarn playwright test

    prod-deploy:
        needs: [end-2-end-test]
        environment: production
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: yarn
            - name: Install Vercel CLI
              run: yarn global add vercel@latest
            - name: Deploy project to Vercel
              run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }}
