name: Continuous Deployment

on: push

jobs:
    prettier-backend:
        uses: ./.github/workflows/prettier.yaml
        with:
            directory: backend

    prettier-frontend:
        uses: ./.github/workflows/prettier.yaml
        with:
            directory: frontend

    build-backend:
        uses: ./.github/workflows/build.yaml
        with:
            directory: backend

    build-frontend:
        uses: ./.github/workflows/build.yaml
        with:
            directory: frontend

    end-2-end-test:
        timeout-minutes: 60
        runs-on: ubuntu-latest
        permissions:
            checks: write
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
            - name: Get installed Playwright version
              id: playwright-version
              run: echo "playwright_version=$(jq -r .devDependencies.\"@playwright/test\" package.json)" >> $GITHUB_OUTPUT
            - name: Cache Playwright binaries
              uses: actions/cache@v3
              id: playwright-cache
              with:
                  path: ~/.cache/ms-playwright
                  key: $RUNNER_OS-playwright-${{ steps.playwright-version.outputs.playwright_version }}
            - name: Install dependencies
              run: |
                  npm install &&
                  (cd backend && npm install) &&
                  (cd frontend && npm install)
            - name: Setup DB
              working-directory: backend
              run: |
                  npm run dbpush &&
                  npm run dbseed
            - name: Install Playwright browsers
              run: npm install-browsers
              if: steps.playwright-cache.outputs.cache-hit != 'true'
            - name: Run Playwright tests
              run: npm run test
            - name: Test Report
              uses: dorny/test-reporter@v1
              if: success() || failure()
              with:
                  path: test-results/junit.xml
                  reporter: java-junit

    # prod-deploy:
    #     needs:
    #         - prettier
    #         - end-2-end-test
    #     environment:
    #         name: production
    #         url: https://partchat.h4ctar.com
    #     if: github.ref == 'refs/heads/main'
    #     runs-on: ubuntu-latest
    #     steps:
    #         - uses: actions/checkout@v3
    #         # git pull
    #         # (cd frontend && npm install && npm run build)
    #         # (cd backend && npm install && npm run dbpush && npm run build)
    #         # pm2 restart server
